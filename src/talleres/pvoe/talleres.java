/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package talleres.pvoe;

import inscripcion.pvoe.inscripcion;
import java.io.IOException;
import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
/**
 *
 * @author emilionava
 */
public class talleres extends javax.swing.JFrame {

    /**
     * Creates new form talleres
     */
    public talleres() {
        initComponents();
        updateTableWithData();  // Llamar al método para cargar los datos en la tabla
        setTitle("Casa de la Cultura - UAM Azcapotzalco :: Inscripción de Talleres ");
        setSize(800, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
   // Método para capturar los talleres seleccionados
    private List<String> getSelectedTalleres() {
        List<String> talleresSeleccionados = new ArrayList<>();
        if (ChBoxTeatro.isSelected()) talleresSeleccionados.add("Teatro");
        if (jCheckBox1.isSelected()) talleresSeleccionados.add("Danza");
        if (ChBoxLectura.isSelected()) talleresSeleccionados.add("Lectura");
        if (ChBoxRedaccion.isSelected()) talleresSeleccionados.add("Redacción");
        if (ChBoxDibujo.isSelected()) talleresSeleccionados.add("Dibujo");
        if (ChBoxPintura.isSelected()) talleresSeleccionados.add("Pintura");
        return talleresSeleccionados;
    }

    // Método para calcular el costo total dependiendo de los talleres seleccionados
    private double getCostoTotal(List<String> talleresSeleccionados) {
        double costoTotal = 0.0;

        // Mapa de los costos por curso y material
        Map<String, Double[]> costos = new HashMap<>();
        costos.put("Teatro", new Double[] {500.0, 550.0});
        costos.put("Danza", new Double[] {300.0, 400.0});
        costos.put("Lectura", new Double[] {150.0, 200.0});
        costos.put("Redacción", new Double[] {300.0, 450.0});
        costos.put("Dibujo", new Double[] {750.0, 1200.0});
        costos.put("Pintura", new Double[] {300.0, 400.0});

        // Cálculo de costo total de los talleres seleccionados
        for (String taller : talleresSeleccionados) {
            Double[] costo = costos.get(taller);
            if (costo != null) {
                // Si se selecciona "Sí" para agregar material, tomar el segundo costo (con material)
                if (RBtnSi.isSelected()) {
                    costoTotal += costo[1];  // Costo con material
                } else {
                    costoTotal += costo[0];  // Costo sin material
                }
            }
        }
        return costoTotal;
    }

    // Método para leer los cursos desde un archivo .txt
    private List<String[]> readCourses(String filePath) {
        List<String[]> courses = new ArrayList<>();
        try {
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            String line;
            while ((line = br.readLine()) != null) {
                // Asumiendo que los datos están separados por comas
                String[] courseData = line.split(",");
                courses.add(courseData);
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return courses;
    }

    // Método para actualizar la tabla con los datos de los talleres
    private void updateTableWithData() {
        String filePath = "Talleres.txt";  // Ruta del archivo con los datos de los talleres
        List<String[]> courses = readCourses(filePath);

        DefaultTableModel model = (DefaultTableModel) TablaTalleres.getModel();
        model.setRowCount(0);  // Limpiar cualquier dato anterior

        // Agregar los cursos a la tabla
        for (String[] course : courses) {
            model.addRow(course);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        JPTalleres = new javax.swing.JPanel();
        ChBoxDanza = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaTalleres = new javax.swing.JTable();
        BtnAtras = new javax.swing.JButton();
        BtnInscribir = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        RBtnSi = new javax.swing.JRadioButton();
        RBtnNo = new javax.swing.JRadioButton();
        ChBoxTeatro = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        ChBoxLectura = new javax.swing.JCheckBox();
        ChBoxRedaccion = new javax.swing.JCheckBox();
        ChBoxDibujo = new javax.swing.JCheckBox();
        ChBoxPintura = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ChBoxDanza.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setText("Talleres a Inscribir");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Seleccione su taller:");

        TablaTalleres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Taller", "Tutor", "Horario", "Costo", "Costo+Mat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaTalleres.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TablaTalleres);
        if (TablaTalleres.getColumnModel().getColumnCount() > 0) {
            TablaTalleres.getColumnModel().getColumn(0).setResizable(false);
            TablaTalleres.getColumnModel().getColumn(1).setResizable(false);
            TablaTalleres.getColumnModel().getColumn(2).setResizable(false);
            TablaTalleres.getColumnModel().getColumn(3).setResizable(false);
            TablaTalleres.getColumnModel().getColumn(4).setResizable(false);
        }

        BtnAtras.setText("Atras");
        BtnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAtrasActionPerformed(evt);
            }
        });

        BtnInscribir.setText("Inscribir");
        BtnInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInscribirActionPerformed(evt);
            }
        });

        jLabel9.setText("Deseas agregar el costo del Taller + Material ");

        RBtnSi.setText("Sí");

        RBtnNo.setText("No");

        ChBoxTeatro.setText("Teatro");

        jCheckBox1.setText("Danza");

        ChBoxLectura.setText("Lectura");

        ChBoxRedaccion.setText("Redacción");

        ChBoxDibujo.setText("Dibujo");

        ChBoxPintura.setText("Pintura");

        javax.swing.GroupLayout ChBoxDanzaLayout = new javax.swing.GroupLayout(ChBoxDanza);
        ChBoxDanza.setLayout(ChBoxDanzaLayout);
        ChBoxDanzaLayout.setHorizontalGroup(
            ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(BtnAtras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnInscribir)
                .addGap(32, 32, 32))
            .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel1))
                    .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(RBtnSi)
                        .addGap(18, 18, 18)
                        .addComponent(RBtnNo))
                    .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChBoxTeatro)
                            .addComponent(ChBoxRedaccion))
                        .addGap(53, 53, 53)
                        .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(ChBoxDibujo))
                        .addGap(49, 49, 49)
                        .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChBoxPintura)
                            .addComponent(ChBoxLectura))))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        ChBoxDanzaLayout.setVerticalGroup(
            ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChBoxDanzaLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChBoxDanzaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCheckBox1)
                                .addComponent(ChBoxLectura))
                            .addComponent(ChBoxTeatro))
                        .addGap(18, 18, 18)
                        .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChBoxRedaccion)
                            .addComponent(ChBoxDibujo)
                            .addComponent(ChBoxPintura))
                        .addGap(29, 29, 29)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(RBtnSi)
                    .addComponent(RBtnNo))
                .addGap(18, 18, 18)
                .addGroup(ChBoxDanzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAtras)
                    .addComponent(BtnInscribir))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout JPTalleresLayout = new javax.swing.GroupLayout(JPTalleres);
        JPTalleres.setLayout(JPTalleresLayout);
        JPTalleresLayout.setHorizontalGroup(
            JPTalleresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPTalleresLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(ChBoxDanza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        JPTalleresLayout.setVerticalGroup(
            JPTalleresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPTalleresLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(ChBoxDanza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPTalleres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPTalleres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInscribirActionPerformed
        // TODO add your handling code here:\
      // Obtener los talleres seleccionados
    List<String> talleresSeleccionados = getSelectedTalleres();

    if (talleresSeleccionados.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar al menos un taller.");
        return;  // Si no se selecciona ningún taller, no continuar
    }

    // Obtener el costo total de los talleres seleccionados
    double costoTotal = getCostoTotal(talleresSeleccionados);

    // Crear el texto que se guardará en el archivo registroUsuarios.txt (solo los talleres)
    String registro = "Talleres seleccionados: " + String.join(", ", talleresSeleccionados) 
                      + ", Costo Total: $" + costoTotal + "\n";

    // Ruta del archivo en el mismo directorio
    String filePath = "registrosUsuarios.txt";  // Utiliza la ruta del archivo actual

    try {
        // Usar el mismo enfoque de FileWriter y BufferedWriter
        FileWriter fw = new FileWriter(filePath, true);  // 'true' para agregar al archivo si ya existe
        BufferedWriter bw = new BufferedWriter(fw);
        bw.write(registro);
        bw.close();
        JOptionPane.showMessageDialog(this, "¡Inscripción exitosa!");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al guardar la inscripción.");
        e.printStackTrace();  // Imprime el error para la depuración
    }
    }//GEN-LAST:event_BtnInscribirActionPerformed

    private void BtnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAtrasActionPerformed
        // TODO add your handling code here:
        // Aquí agregamos la acción del botón BtnAtras
        this.dispose();  // Cierra la ventana actual
        inscripcion reg = new inscripcion();  // Crea una nueva instancia de la ventana de Registro
        reg.setVisible(true);  // Muestra la nueva ventana
    }//GEN-LAST:event_BtnAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(talleres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(talleres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(talleres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(talleres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(talleres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new talleres().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAtras;
    private javax.swing.JButton BtnInscribir;
    private javax.swing.JPanel ChBoxDanza;
    private javax.swing.JCheckBox ChBoxDibujo;
    private javax.swing.JCheckBox ChBoxLectura;
    private javax.swing.JCheckBox ChBoxPintura;
    private javax.swing.JCheckBox ChBoxRedaccion;
    private javax.swing.JCheckBox ChBoxTeatro;
    private javax.swing.JPanel JPTalleres;
    private javax.swing.JRadioButton RBtnNo;
    private javax.swing.JRadioButton RBtnSi;
    private javax.swing.JTable TablaTalleres;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
